{"ast":null,"code":"import _classCallCheck from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport './Meme.css';\n\nvar Timer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timer, _Component);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timer).call(this, props));\n    _this.state = {\n      timeInterval: _this.props.timeInterval,\n      // in seconds\n      timeRemaing: 0 // time to display\n\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"getRoundedTime\",\n    value: function getRoundedTime() {\n      return Math.floor(moment().unix() / this.state.timeInterval) * this.state.timeInterval;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var eventTime = getRoundedTime() + this.state.timeInterval;\n      var currentTime = moment().unix();\n      var diffTime = eventTime - currentTime;\n      var duration = moment.duration(diffTime * 1000, 'milliseconds');\n      var interval = 1000;\n      var $this = this;\n      setInterval(function () {\n        duration = moment.duration(duration - interval, 'milliseconds');\n        $this.setState({\n          timerDisplay: duration.hours() + \" : \" + duration.minutes() + \" : \" + duration.seconds()\n        });\n\n        if (duration.seconds() <= 0) {\n          $this.setBlackCard();\n          eventTime = getRoundedTime() + this.state.timeInterval;\n          currentTime = moment().unix();\n          diffTime = eventTime - currentTime;\n          duration = moment.duration(diffTime * 1000, 'milliseconds');\n        }\n      }, interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.timeRemaing);\n    }\n  }]);\n\n  return Timer;\n}(Component);\n\nexport default Timer;","map":{"version":3,"sources":["/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/components/Timer.js"],"names":["React","Component","Timer","props","state","timeInterval","timeRemaing","Math","floor","moment","unix","eventTime","getRoundedTime","currentTime","diffTime","duration","interval","$this","setInterval","setState","timerDisplay","hours","minutes","seconds","setBlackCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,MAAKF,KAAL,CAAWE,YADd;AAC4B;AACvCC,MAAAA,WAAW,EAAE,CAFF,CAEI;;AAFJ,KAAb;AAFiB;AAMlB;;;;qCAEgB;AACf,aAAOC,IAAI,CAACC,KAAL,CAAWC,MAAM,GAAGC,IAAT,KAAkB,KAAKN,KAAL,CAAWC,YAAxC,IAAwD,KAAKD,KAAL,CAAWC,YAA1E;AACD;;;iCAGa;AACZ,UAAIM,SAAS,GAAGC,cAAc,KAAK,KAAKR,KAAL,CAAWC,YAA9C;AACA,UAAIQ,WAAW,GAAGJ,MAAM,GAAGC,IAAT,EAAlB;AACA,UAAII,QAAQ,GAAGH,SAAS,GAAGE,WAA3B;AACA,UAAIE,QAAQ,GAAGN,MAAM,CAACM,QAAP,CAAgBD,QAAQ,GAAG,IAA3B,EAAiC,cAAjC,CAAf;AACA,UAAIE,QAAQ,GAAG,IAAf;AAEA,UAAIC,KAAK,GAAG,IAAZ;AAEAC,MAAAA,WAAW,CAAC,YAAY;AACtBH,QAAAA,QAAQ,GAAGN,MAAM,CAACM,QAAP,CAAgBA,QAAQ,GAAGC,QAA3B,EAAqC,cAArC,CAAX;AACAC,QAAAA,KAAK,CAACE,QAAN,CAAe;AACbC,UAAAA,YAAY,EAAEL,QAAQ,CAACM,KAAT,KAAmB,KAAnB,GAA2BN,QAAQ,CAACO,OAAT,EAA3B,GAAgD,KAAhD,GAAwDP,QAAQ,CAACQ,OAAT;AADzD,SAAf;;AAGA,YAAIR,QAAQ,CAACQ,OAAT,MAAsB,CAA1B,EAA6B;AAC3BN,UAAAA,KAAK,CAACO,YAAN;AACAb,UAAAA,SAAS,GAAGC,cAAc,KAAK,KAAKR,KAAL,CAAWC,YAA1C;AACAQ,UAAAA,WAAW,GAAGJ,MAAM,GAAGC,IAAT,EAAd;AACAI,UAAAA,QAAQ,GAAGH,SAAS,GAAGE,WAAvB;AACAE,UAAAA,QAAQ,GAAGN,MAAM,CAACM,QAAP,CAAgBD,QAAQ,GAAG,IAA3B,EAAiC,cAAjC,CAAX;AACD;AACF,OAZU,EAYRE,QAZQ,CAAX;AAaD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKZ,KAAL,CAAWE,WAAhB,CADF;AAGD;;;;EA1CiBL,S;;AA6CpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Meme.css';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeInterval: this.props.timeInterval, // in seconds\n      timeRemaing: 0 // time to display\n    };\n  }\n\n  getRoundedTime() {\n    return Math.floor(moment().unix() / this.state.timeInterval) * this.state.timeInterval\n  }\n\n\n  startTimer () {\n    var eventTime = getRoundedTime() + this.state.timeInterval;\n    var currentTime = moment().unix()\n    var diffTime = eventTime - currentTime\n    var duration = moment.duration(diffTime * 1000, 'milliseconds')\n    var interval = 1000;\n\n    var $this = this\n\n    setInterval(function () {\n      duration = moment.duration(duration - interval, 'milliseconds');\n      $this.setState({\n        timerDisplay: duration.hours() + \" : \" + duration.minutes() + \" : \" + duration.seconds()\n      })\n      if (duration.seconds() <= 0) {\n        $this.setBlackCard()\n        eventTime = getRoundedTime() + this.state.timeInterval;\n        currentTime = moment().unix()\n        diffTime = eventTime - currentTime\n        duration = moment.duration(diffTime * 1000, 'milliseconds')\n      }\n    }, interval);\n  }\n\n  render() {\n    return (\n      <h2>{this.state.timeRemaing}</h2>\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}
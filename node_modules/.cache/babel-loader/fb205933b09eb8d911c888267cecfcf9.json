{"ast":null,"code":"import _classCallCheck from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport Timer from \"react-compound-timer\";\nimport './Meme.css';\n\nvar withTimer = function withTimer(timerProps) {\n  return function (WrappedComponent) {\n    return function (wrappedComponentProps) {\n      return React.createElement(Timer, Object.assign({}, timerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6\n        },\n        __self: this\n      }), function (timerRenderProps) {\n        return React.createElement(WrappedComponent, Object.assign({}, wrappedComponentProps, {\n          timer: timerRenderProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }));\n      });\n    };\n  };\n};\n\nvar CustomTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomTimer, _Component);\n\n  function CustomTimer(props) {\n    var _this;\n\n    _classCallCheck(this, CustomTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomTimer).call(this, props));\n    _this.state = {\n      timeInterval: _this.props.timeInterval // in milliseconds\n\n    };\n    return _this;\n  }\n\n  _createClass(CustomTimer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$timer = this.props.timer,\n          setCheckpoints = _this$props$timer.setCheckpoints,\n          setDirection = _this$props$timer.setDirection,\n          setTime = _this$props$timer.setTime,\n          start = _this$props$timer.start;\n      setCheckpoints([{\n        time: 1000,\n        callback: function callback() {\n          return setDirection('forward');\n        }\n      }, {\n        time: 5000,\n        callback: function callback() {\n          return setDirection('backward');\n        }\n      }]);\n      setTimeout(function () {\n        setTime(10000);\n        start();\n      }, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h3\", {\n        className: \"TimerCountdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Timer.Hours, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \":\", React.createElement(Timer.Minutes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \":\", React.createElement(Timer.Seconds, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomTimer;\n}(Component);\n\nvar TimerHOC = withTimer({\n  direction: 'backward',\n  initialTime: 5000\n})(CustomTimer);\nexport default TimerHOC;","map":{"version":3,"sources":["/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/components/Timer.js"],"names":["React","Component","Timer","withTimer","timerProps","WrappedComponent","wrappedComponentProps","timerRenderProps","CustomTimer","props","state","timeInterval","timer","setCheckpoints","setDirection","setTime","start","time","callback","setTimeout","TimerHOC","direction","initialTime"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,YAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,UAAU;AAAA,SAAI,UAAAC,gBAAgB;AAAA,WAAI,UAAAC,qBAAqB;AAAA,aACvE,oBAAC,KAAD,oBAAWF,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,UAAAG,gBAAgB;AAAA,eACf,oBAAC,gBAAD,oBAAsBD,qBAAtB;AAA6C,UAAA,KAAK,EAAEC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADe;AAAA,OADnB,CADuE;AAAA,KAAzB;AAAA,GAApB;AAAA,CAA5B;;IAQMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,MAAKF,KAAL,CAAWE,YADd,CAC4B;;AAD5B,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA,8BAC2C,KAAKF,KAAL,CAAWG,KADtD;AAAA,UACNC,cADM,qBACNA,cADM;AAAA,UACUC,YADV,qBACUA,YADV;AAAA,UACwBC,OADxB,qBACwBA,OADxB;AAAA,UACiCC,KADjC,qBACiCA,KADjC;AAGdH,MAAAA,cAAc,CAAC,CACX;AACII,QAAAA,IAAI,EAAE,IADV;AAEIC,QAAAA,QAAQ,EAAE;AAAA,iBAAMJ,YAAY,CAAC,SAAD,CAAlB;AAAA;AAFd,OADW,EAKX;AACIG,QAAAA,IAAI,EAAE,IADV;AAEIC,QAAAA,QAAQ,EAAE;AAAA,iBAAMJ,YAAY,CAAC,UAAD,CAAlB;AAAA;AAFd,OALW,CAAD,CAAd;AAWAK,MAAAA,UAAU,CAAC,YAAM;AACbJ,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,QAAAA,KAAK;AACR,OAHS,EAGP,IAHO,CAAV;AAIH;;;6BAEM;AACP,aACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,OAEI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,OAGI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADF;AAOD;;;;EApCuBf,S;;AAuC1B,IAAMmB,QAAQ,GAAGjB,SAAS,CAAC;AACvBkB,EAAAA,SAAS,EAAE,UADY;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAD,CAAT,CAGdd,WAHc,CAAjB;AAKA,eAAeY,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Timer from \"react-compound-timer\";\nimport './Meme.css';\n\nconst withTimer = timerProps => WrappedComponent => wrappedComponentProps => (\n  <Timer {...timerProps}>\n    {timerRenderProps =>\n      <WrappedComponent {...wrappedComponentProps} timer={timerRenderProps} />}\n  </Timer>\n);\n\n\nclass CustomTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeInterval: this.props.timeInterval, // in milliseconds\n    };\n  }\n\n  componentDidMount() {\n        const { setCheckpoints, setDirection, setTime, start } = this.props.timer;\n\n        setCheckpoints([\n            {\n                time: 1000,\n                callback: () => setDirection('forward'),\n            },\n            {\n                time: 5000,\n                callback: () => setDirection('backward'),\n            },\n        ]);\n\n        setTimeout(() => {\n            setTime(10000);\n            start();\n        }, 3000);\n    }\n\n  render() {\n    return (\n      <h3 className=\"TimerCountdown\">\n          <Timer.Hours />:\n          <Timer.Minutes />:\n          <Timer.Seconds />\n      </h3>\n    );\n  }\n}\n\nconst TimerHOC = withTimer({\n    direction: 'backward',\n    initialTime: 5000,\n})(CustomTimer);\n\nexport default TimerHOC;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/captions/CaptionList.js\";\nimport React, { Component } from 'react';\nimport CaptionView from './CaptionView';\nimport CaptionListHeader from './CaptionListHeader';\nimport './CaptionList.css';\nimport CaptionCardFactory from '../web3Contracts/CaptionCardFactory';\nimport CaptionCard from '../web3Contracts/CaptionCard';\nimport web3 from '../web3';\nimport Spinner from '../components/Spinner';\nvar DEFAULT_BUY_AMOUNT = Math.pow(10, 8);\n\nvar CaptionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CaptionList, _Component);\n\n  function CaptionList(props) {\n    var _this;\n\n    _classCallCheck(this, CaptionList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaptionList).call(this, props));\n    _this.state = {\n      data: [],\n      account: _this.props.account\n    };\n\n    _this.getCaptionCards();\n\n    return _this;\n  }\n\n  _createClass(CaptionList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.account != this.state.account) {\n        this.setState({\n          data: [],\n          account: this.props.account\n        }, this.getCaptionCards);\n      }\n    }\n  }, {\n    key: \"onBuy\",\n    value: function () {\n      var _onBuy = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(addr) {\n        var accounts, price;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                CaptionCard.options.address = addr;\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n                _context.next = 6;\n                return CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call();\n\n              case 6:\n                price = _context.sent;\n                _context.next = 9;\n                return CaptionCard.methods.buy(DEFAULT_BUY_AMOUNT, accounts[0]).send({\n                  value: price,\n                  from: accounts[0]\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onBuy(_x) {\n        return _onBuy.apply(this, arguments);\n      }\n\n      return onBuy;\n    }()\n  }, {\n    key: \"onSell\",\n    value: function () {\n      var _onSell = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(addr) {\n        var accounts, price, price2;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                CaptionCard.options.address = addr;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                _context2.next = 6;\n                return CaptionCard.methods.calculateSaleReturn(DEFAULT_BUY_AMOUNT).call();\n\n              case 6:\n                price = _context2.sent;\n                price = web3.utils.fromWei(price.toString(), 'ether');\n                _context2.next = 10;\n                return CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call();\n\n              case 10:\n                price2 = _context2.sent;\n                price2 = web3.utils.fromWei(price2.toString(), 'ether');\n                _context2.next = 14;\n                return CaptionCard.methods.sell(DEFAULT_BUY_AMOUNT).send({\n                  from: accounts[0]\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function onSell(_x2) {\n        return _onSell.apply(this, arguments);\n      }\n\n      return onSell;\n    }()\n  }, {\n    key: \"getCaptionCards\",\n    value: function () {\n      var _getCaptionCards = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var account, len, data, i, addr, caption, buyPrice, sellPrice, balance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                account = this.state.account;\n                _context3.next = 3;\n                return CaptionCardFactory.methods.getCaptionCardsLength.call().then(function (result) {\n                  return result.toNumber();\n                });\n\n              case 3:\n                len = _context3.sent;\n                data = [];\n                i = 0;\n\n              case 6:\n                if (!(i < len)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 9;\n                return CaptionCardFactory.methods.captionCards(i).call();\n\n              case 9:\n                addr = _context3.sent;\n                CaptionCard.options.address = addr;\n                _context3.next = 13;\n                return CaptionCard.methods.captionText().call();\n\n              case 13:\n                caption = _context3.sent;\n                _context3.next = 16;\n                return CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call();\n\n              case 16:\n                buyPrice = _context3.sent;\n                buyPrice = web3.utils.fromWei(buyPrice.toString(), 'ether');\n                _context3.next = 20;\n                return CaptionCard.methods.calculateSaleReturn(DEFAULT_BUY_AMOUNT).call();\n\n              case 20:\n                sellPrice = _context3.sent;\n                sellPrice = sellPrice == null ? null : web3.utils.fromWei(sellPrice.toString(), 'ether');\n                _context3.next = 24;\n                return CaptionCard.methods.balanceOf(account).call();\n\n              case 24:\n                balance = _context3.sent;\n                data.push({\n                  id: addr,\n                  sellPrice: sellPrice,\n                  buyPrice: buyPrice,\n                  balance: balance.toNumber() / DEFAULT_BUY_AMOUNT,\n                  caption: caption\n                });\n\n              case 26:\n                i++;\n                _context3.next = 6;\n                break;\n\n              case 29:\n                this.setState({\n                  data: data\n                });\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getCaptionCards() {\n        return _getCaptionCards.apply(this, arguments);\n      }\n\n      return getCaptionCards;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* Sort in order of descending price. */\n      var sortedData = this.state.data.sort(function (a, b) {\n        return b.buyPrice - a.buyPrice;\n      });\n      var captions = sortedData.map(function (data) {\n        return React.createElement(CaptionView, {\n          id: data.id,\n          key: data.id,\n          caption: data.caption,\n          balance: data.balance,\n          price: data.buyPrice,\n          sellPrice: data.sellPrice,\n          onSell: _this2.onSell,\n          onBuy: _this2.onBuy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"CaptionList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(CaptionListHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"CaptionListMainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, captions.length > 0 ? captions : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CaptionList;\n}(Component);\n\nexport default CaptionList;","map":{"version":3,"sources":["/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/captions/CaptionList.js"],"names":["React","Component","CaptionView","CaptionListHeader","CaptionCardFactory","CaptionCard","web3","Spinner","DEFAULT_BUY_AMOUNT","CaptionList","props","state","data","account","getCaptionCards","setState","addr","options","address","eth","getAccounts","accounts","methods","priceToMint","call","price","buy","send","value","from","calculateSaleReturn","utils","fromWei","toString","price2","sell","getCaptionCardsLength","then","result","toNumber","len","i","captionCards","captionText","caption","buyPrice","sellPrice","balanceOf","balance","push","id","sortedData","sort","a","b","captions","map","onSell","onBuy","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CaptionView from './CaptionView';\nimport CaptionListHeader from './CaptionListHeader';\nimport './CaptionList.css';\nimport CaptionCardFactory from '../web3Contracts/CaptionCardFactory';\nimport CaptionCard from '../web3Contracts/CaptionCard';\nimport web3 from '../web3';\nimport Spinner from '../components/Spinner';\n\nconst DEFAULT_BUY_AMOUNT = 10 ** 8;\n\nclass CaptionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      account: this.props.account\n    };\n    this.getCaptionCards();\n  }\n\n  componentDidUpdate() {\n    if (this.props.account != this.state.account) {\n      this.setState(\n        {data: [], account: this.props.account},\n        this.getCaptionCards\n      );\n    }\n  }\n\n  async onBuy(addr) {\n    CaptionCard.options.address = addr;\n    const accounts = await web3.eth.getAccounts();\n    let price = await CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call();\n    await CaptionCard.methods.buy(\n      DEFAULT_BUY_AMOUNT, accounts[0]).send(\n        {value: price, from: accounts[0]});\n  }\n\n  async onSell(addr) {\n    CaptionCard.options.address = addr;\n    const accounts = await web3.eth.getAccounts();\n    let price = await CaptionCard.methods.calculateSaleReturn(DEFAULT_BUY_AMOUNT).call();\n    price = web3.utils.fromWei(price.toString(), 'ether');\n\n    let price2 = await CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call();\n    price2 = web3.utils.fromWei(price2.toString(), 'ether');\n\n    await CaptionCard.methods.sell(\n      DEFAULT_BUY_AMOUNT).send(\n        {from: accounts[0]});\n  }\n\n  async getCaptionCards() {\n    const account = this.state.account;\n    const len = await CaptionCardFactory.methods.getCaptionCardsLength.call().then(result => result.toNumber());\n    var data = []\n    for (var i = 0; i < len; i++) {\n      let addr = await CaptionCardFactory.methods.captionCards(i).call();\n      CaptionCard.options.address = addr;\n      let caption = await CaptionCard.methods.captionText().call();\n      let buyPrice = await CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call();\n      buyPrice = web3.utils.fromWei(buyPrice.toString(), 'ether');\n\n      let sellPrice = await CaptionCard.methods.calculateSaleReturn(DEFAULT_BUY_AMOUNT).call();\n      sellPrice = sellPrice == null ? null : web3.utils.fromWei(sellPrice.toString(), 'ether');\n\n\n      let balance = await CaptionCard.methods.balanceOf(account).call();\n      data.push({id: addr, sellPrice: sellPrice, buyPrice: buyPrice, balance: balance.toNumber() / DEFAULT_BUY_AMOUNT, caption: caption});\n    }\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    /* Sort in order of descending price. */\n    const sortedData = this.state.data.sort(function(a, b){\n      return b.buyPrice - a.buyPrice\n    });\n    const captions = sortedData.map((data) => {\n      return <CaptionView\n        id={data.id}\n        key={data.id}\n        caption={data.caption}\n        balance={data.balance}\n        price={data.buyPrice}\n        sellPrice={data.sellPrice}\n        onSell={this.onSell}\n        onBuy={this.onBuy}\n      />\n    });\n\n    return (\n      <div className=\"CaptionList\">\n        <CaptionListHeader />\n        <div className=\"CaptionListMainContainer\">\n          {captions.length > 0 ?\n           captions\n           : <Spinner /> }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CaptionList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/captions/CaptionList.js\";\nimport React, { Component } from 'react';\nimport CaptionView from './CaptionView';\nimport CaptionListHeader from './CaptionListHeader';\nimport './CaptionList.css';\nimport CaptionCardFactory from '../web3Contracts/CaptionCardFactory';\nimport CaptionCard from '../web3Contracts/CaptionCard';\nimport web3 from '../web3'; // TODO: actually fetch and fill with real data\n\nimport EXAMPLE_DATA from '../example_data.json';\n\nvar CaptionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CaptionList, _Component);\n\n  function CaptionList(props) {\n    var _this;\n\n    _classCallCheck(this, CaptionList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaptionList).call(this, props));\n\n    _this.onBuy = function (id) {\n      alert('Buying ' + id);\n    };\n\n    _this.onSell = function (id) {\n      alert('Selling ' + id);\n    };\n\n    _this.state = {\n      data: EXAMPLE_DATA\n    };\n\n    _this.getCaptionCards();\n\n    return _this;\n  }\n\n  _createClass(CaptionList, [{\n    key: \"getCaptionCards\",\n    value: function () {\n      var _getCaptionCards = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var addr, caption, price;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return CaptionCardFactory.methods.captionCards(0).call();\n\n              case 2:\n                addr = _context.sent;\n                CaptionCard.options.address = addr;\n                _context.next = 6;\n                return CaptionCard.methods.captionText().call();\n\n              case 6:\n                caption = _context.sent;\n                _context.next = 9;\n                return CaptionCard.methods.priceToMint(Math.pow(10, 8)).call().then(function (result) {\n                  return result.toNumber();\n                });\n\n              case 9:\n                price = _context.sent;\n                price = Web3.utils.toWei(price);\n                this.setState({\n                  data: [{\n                    id: \"1\",\n                    price: price,\n                    balance: 0,\n                    caption: caption\n                  }]\n                }); // console.log(this.data);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCaptionCards() {\n        return _getCaptionCards.apply(this, arguments);\n      }\n\n      return getCaptionCards;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var captions = this.state.data.map(function (data) {\n        return React.createElement(CaptionView, {\n          id: data.id,\n          key: data.id,\n          caption: data.caption,\n          balance: data.balance,\n          price: data.price,\n          onSell: _this2.onSell,\n          onBuy: _this2.onBuy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"CaptionList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CaptionListHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"CaptionListMainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, captions));\n    }\n  }]);\n\n  return CaptionList;\n}(Component);\n\nexport default CaptionList;","map":{"version":3,"sources":["/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/captions/CaptionList.js"],"names":["React","Component","CaptionView","CaptionListHeader","CaptionCardFactory","CaptionCard","web3","EXAMPLE_DATA","CaptionList","props","onBuy","id","alert","onSell","state","data","getCaptionCards","methods","captionCards","call","addr","options","address","captionText","caption","priceToMint","then","result","toNumber","price","Web3","utils","toWei","setState","balance","captions","map"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,mBAAP;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;IAEMC,W;;;;;AAEJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,UAQnBC,KARmB,GAQX,UAACC,EAAD,EAAQ;AACdC,MAAAA,KAAK,CAAC,YAAYD,EAAb,CAAL;AACD,KAVkB;;AAAA,UAYnBE,MAZmB,GAYV,UAACF,EAAD,EAAQ;AACfC,MAAAA,KAAK,CAAC,aAAaD,EAAd,CAAL;AACD,KAdkB;;AAEjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAER;AADK,KAAb;;AAGA,UAAKS,eAAL;;AALiB;AAMlB;;;;;;;;;;;;;;uBAWoBZ,kBAAkB,CAACa,OAAnB,CAA2BC,YAA3B,CAAwC,CAAxC,EAA2CC,IAA3C,E;;;AAAbC,gBAAAA,I;AACNf,gBAAAA,WAAW,CAACgB,OAAZ,CAAoBC,OAApB,GAA8BF,IAA9B;;uBACoBf,WAAW,CAACY,OAAZ,CAAoBM,WAApB,GAAkCJ,IAAlC,E;;;AAAhBK,gBAAAA,O;;uBACcnB,WAAW,CAACY,OAAZ,CAAoBQ,WAApB,UAAgC,EAAhC,EAAsC,CAAtC,GAAyCN,IAAzC,GAAgDO,IAAhD,CAAqD,UAAAC,MAAM;AAAA,yBAAIA,MAAM,CAACC,QAAP,EAAJ;AAAA,iBAA3D,C;;;AAAdC,gBAAAA,K;AACJA,gBAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBH,KAAjB,CAAR;AACA,qBAAKI,QAAL,CAAc;AACZlB,kBAAAA,IAAI,EAAE,CAAC;AAACJ,oBAAAA,EAAE,EAAE,GAAL;AAAUkB,oBAAAA,KAAK,EAAEA,KAAjB;AAAwBK,oBAAAA,OAAO,EAAE,CAAjC;AAAoCV,oBAAAA,OAAO,EAAEA;AAA7C,mBAAD;AADM,iBAAd,E,CAGA;;;;;;;;;;;;;;;;;;6BAGO;AAAA;;AACP,UAAMW,QAAQ,GAAG,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,GAAhB,CAAoB,UAACrB,IAAD,EAAU;AAC7C,eAAO,oBAAC,WAAD;AACL,UAAA,EAAE,EAAEA,IAAI,CAACJ,EADJ;AAEL,UAAA,GAAG,EAAEI,IAAI,CAACJ,EAFL;AAGL,UAAA,OAAO,EAAEI,IAAI,CAACS,OAHT;AAIL,UAAA,OAAO,EAAET,IAAI,CAACmB,OAJT;AAKL,UAAA,KAAK,EAAEnB,IAAI,CAACc,KALP;AAML,UAAA,MAAM,EAAE,MAAI,CAAChB,MANR;AAOL,UAAA,KAAK,EAAE,MAAI,CAACH,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASD,OAVgB,CAAjB;AAYA,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyB,QADH,CAFF,CADF;AAQD;;;;EAnDuBlC,S;;AAsD1B,eAAeO,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport CaptionView from './CaptionView';\nimport CaptionListHeader from './CaptionListHeader';\nimport './CaptionList.css';\nimport CaptionCardFactory from '../web3Contracts/CaptionCardFactory';\nimport CaptionCard from '../web3Contracts/CaptionCard';\nimport web3 from '../web3';\n\n// TODO: actually fetch and fill with real data\nimport EXAMPLE_DATA from '../example_data.json'\n\nclass CaptionList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: EXAMPLE_DATA\n    };\n    this.getCaptionCards()\n  }\n\n  onBuy = (id) => {\n    alert('Buying ' + id);\n  }\n\n  onSell = (id) => {\n    alert('Selling ' + id);\n  }\n\n  async getCaptionCards() {\n    const addr = await CaptionCardFactory.methods.captionCards(0).call();\n    CaptionCard.options.address = addr;\n    let caption = await CaptionCard.methods.captionText().call();\n    let price = await CaptionCard.methods.priceToMint(10 ** 8).call().then(result => result.toNumber());\n    price = Web3.utils.toWei(price);\n    this.setState({\n      data: [{id: \"1\", price: price, balance: 0, caption: caption}]\n    });\n    // console.log(this.data);\n  }\n\n  render() {\n    const captions = this.state.data.map((data) => {\n      return <CaptionView\n        id={data.id}\n        key={data.id}\n        caption={data.caption}\n        balance={data.balance}\n        price={data.price}\n        onSell={this.onSell}\n        onBuy={this.onBuy}\n      />\n    });\n\n    return (\n      <div className=\"CaptionList\">\n        <CaptionListHeader />\n        <div className=\"CaptionListMainContainer\">\n          {captions}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CaptionList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/captions/CaptionList.js\";\nimport React, { Component } from 'react';\nimport CaptionView from './CaptionView';\nimport CaptionListHeader from './CaptionListHeader';\nimport './CaptionList.css';\nimport CaptionCardFactory from '../web3Contracts/CaptionCardFactory';\nimport CaptionCard from '../web3Contracts/CaptionCard';\nimport web3 from '../web3'; // TODO: actually fetch and fill with real data\n\nimport EXAMPLE_DATA from '../example_data.json';\nvar DEFAULT_BUY_AMOUNT = Math.pow(10, 8);\n\nvar CaptionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CaptionList, _Component);\n\n  function CaptionList(props) {\n    var _this;\n\n    _classCallCheck(this, CaptionList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaptionList).call(this, props));\n\n    _this.onBuy =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                alert('Buying ' + accounts[0]);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onSell = function (id) {\n      alert('Selling ' + id);\n    };\n\n    _this.state = {\n      data: []\n    };\n\n    _this.getCaptionCards();\n\n    return _this;\n  }\n\n  _createClass(CaptionList, [{\n    key: \"getCaptionCards\",\n    value: function () {\n      var _getCaptionCards = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var len, data, i, addr, caption, price;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return CaptionCardFactory.methods.getCaptionCardsLength.call().then(function (result) {\n                  return result.toNumber();\n                });\n\n              case 2:\n                len = _context2.sent;\n                data = [];\n                i = 0;\n\n              case 5:\n                if (!(i < len)) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                _context2.next = 8;\n                return CaptionCardFactory.methods.captionCards(i).call();\n\n              case 8:\n                addr = _context2.sent;\n                CaptionCard.options.address = addr;\n                _context2.next = 12;\n                return CaptionCard.methods.captionText().call();\n\n              case 12:\n                caption = _context2.sent;\n                _context2.next = 15;\n                return CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call().then(function (result) {\n                  return result.toNumber();\n                });\n\n              case 15:\n                price = _context2.sent;\n                price = web3.utils.fromWei(price.toString(), 'ether');\n                data.push({\n                  id: i,\n                  price: price,\n                  balance: 0,\n                  caption: caption\n                });\n\n              case 18:\n                i++;\n                _context2.next = 5;\n                break;\n\n              case 21:\n                this.setState({\n                  data: data\n                });\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCaptionCards() {\n        return _getCaptionCards.apply(this, arguments);\n      }\n\n      return getCaptionCards;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var captions = this.state.data.map(function (data) {\n        return React.createElement(CaptionView, {\n          id: data.id,\n          key: data.id,\n          caption: data.caption,\n          balance: data.balance,\n          price: data.price,\n          onSell: _this2.onSell,\n          onBuy: _this2.onBuy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"CaptionList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CaptionListHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"CaptionListMainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, captions));\n    }\n  }]);\n\n  return CaptionList;\n}(Component);\n\nexport default CaptionList;","map":{"version":3,"sources":["/Users/apaul/Desktop/cs1951l/WhatDoYouMeme/src/captions/CaptionList.js"],"names":["React","Component","CaptionView","CaptionListHeader","CaptionCardFactory","CaptionCard","web3","EXAMPLE_DATA","DEFAULT_BUY_AMOUNT","CaptionList","props","onBuy","id","eth","getAccounts","accounts","alert","onSell","state","data","getCaptionCards","methods","getCaptionCardsLength","call","then","result","toNumber","len","i","captionCards","addr","options","address","captionText","caption","priceToMint","price","utils","fromWei","toString","push","balance","setState","captions","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CaptionView from './CaptionView';\nimport CaptionListHeader from './CaptionListHeader';\nimport './CaptionList.css';\nimport CaptionCardFactory from '../web3Contracts/CaptionCardFactory';\nimport CaptionCard from '../web3Contracts/CaptionCard';\nimport web3 from '../web3';\n\n// TODO: actually fetch and fill with real data\nimport EXAMPLE_DATA from '../example_data.json'\nconst DEFAULT_BUY_AMOUNT = 10 ** 8;\n\n\nclass CaptionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n    this.getCaptionCards()\n  }\n\n  onBuy = async (id)  => {\n    const accounts = await web3.eth.getAccounts()\n    alert('Buying ' + accounts[0]);\n  }\n\n  onSell = (id) => {\n    alert('Selling ' + id);\n  }\n\n  async getCaptionCards() {\n    const len = await CaptionCardFactory.methods.getCaptionCardsLength.call().then(result => result.toNumber());\n    var data = []\n    for (var i = 0; i < len; i++) {\n      let addr = await CaptionCardFactory.methods.captionCards(i).call();\n      CaptionCard.options.address = addr;\n      let caption = await CaptionCard.methods.captionText().call();\n      let price = await CaptionCard.methods.priceToMint(DEFAULT_BUY_AMOUNT).call().then(result => result.toNumber());\n      price = web3.utils.fromWei(price.toString(), 'ether');\n      data.push({id: i, price: price, balance: 0, caption: caption});\n    }\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    const captions = this.state.data.map((data) => {\n      return <CaptionView\n        id={data.id}\n        key={data.id}\n        caption={data.caption}\n        balance={data.balance}\n        price={data.price}\n        onSell={this.onSell}\n        onBuy={this.onBuy}\n      />\n    });\n\n    return (\n      <div className=\"CaptionList\">\n        <CaptionListHeader />\n        <div className=\"CaptionListMainContainer\">\n          {captions}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CaptionList;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/WhatDoYouMeme/client/src/components/Meme.js\";\nimport React, { Component } from 'react';\nimport Timer from './Timer';\nimport './Meme.css';\nvar ROUND_TIME = 1.8 * Math.pow(10, 7);\n\nvar Meme =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Meme, _Component);\n\n  function Meme(props) {\n    var _this;\n\n    _classCallCheck(this, Meme);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Meme).call(this, props));\n    _this.state = {\n      didFetchImage: false\n    };\n    return _this;\n  }\n\n  _createClass(Meme, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchImage();\n      this.calculateRemainingTime();\n    }\n  }, {\n    key: \"fetchImage\",\n    value: function fetchImage() {\n      var _this2 = this;\n\n      fetch('/api/getMeme').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n        console.log(data.image);\n        console.log(data[\"timestamp\"]);\n\n        _this2.setState({\n          didFetchImage: true,\n          imageName: data.image\n        });\n      });\n    }\n  }, {\n    key: \"startNewRound\",\n    value: function startNewRound() {\n      console.log(\"new round\");\n    }\n  }, {\n    key: \"calculateRemainingTime\",\n    value: function calculateRemainingTime() {\n      var newDate = new Date();\n      console.log(ROUND_TIME - (newDate.getTime() - 1556729616319));\n      console.log(\"HEREE\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"MemeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"MemePhoto\",\n        src: this.state.imageName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        className: \"TimeCaption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" Time Remaining in Round \"), React.createElement(Timer, {\n        timeInterval: ROUND_TIME,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Meme;\n}(Component);\n\nexport default Meme;","map":{"version":3,"sources":["/Users/apaul/Desktop/WhatDoYouMeme/client/src/components/Meme.js"],"names":["React","Component","Timer","ROUND_TIME","Math","pow","Meme","props","state","didFetchImage","fetchImage","calculateRemainingTime","fetch","then","res","json","data","console","log","image","setState","imageName","newDate","Date","getTime"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;AAEA,IAAMC,UAAU,GAAG,MAAMC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAY,CAAZ,CAAzB;;IAEMC,I;;;;;AAEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClB,WAAKC,UAAL;AACA,WAAKC,sBAAL;AAED;;;iCAEY;AAAA;;AACXC,MAAAA,KAAK,CAAC,cAAD,CAAL,CACCC,IADD,CACM,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OADN,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,WAAD,CAAhB;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AACZX,UAAAA,aAAa,EAAE,IADH;AAEZY,UAAAA,SAAS,EAAEL,IAAI,CAACG;AAFJ,SAAd;AAID,OAVD;AAWD;;;oCAEe;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;;6CAEwB;AACvB,UAAMI,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYf,UAAU,IAAImB,OAAO,CAACE,OAAR,KAAoB,aAAxB,CAAtB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWa,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAElB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EAhDgBF,S;;AAmDnB,eAAeK,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Timer from './Timer';\nimport './Meme.css';\n\nconst ROUND_TIME = 1.8 * Math.pow(10,7);\n\nclass Meme extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      didFetchImage: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchImage();\n    this.calculateRemainingTime()\n\n  }\n\n  fetchImage() {\n    fetch('/api/getMeme')\n    .then((res) => res.json())\n    .then(data => {\n      console.log(data)\n      console.log(data.image)\n      console.log(data[\"timestamp\"])\n      this.setState({\n        didFetchImage: true,\n        imageName: data.image\n      });\n    });\n  }\n\n  startNewRound() {\n    console.log(\"new round\");\n  }\n\n  calculateRemainingTime() {\n    const newDate = new Date();\n    console.log(ROUND_TIME - (newDate.getTime() - 1556729616319));\n    console.log(\"HEREE\")\n  }\n\n  render() {\n    return (\n      <div className=\"MemeContainer\">\n        <img className=\"MemePhoto\" src={this.state.imageName}/>\n\n        <h5 className=\"TimeCaption\"> Time Remaining in Round </h5>\n        <Timer timeInterval={ROUND_TIME}/>\n      </div>\n    );\n  }\n}\n\nexport default Meme;\n"]},"metadata":{},"sourceType":"module"}
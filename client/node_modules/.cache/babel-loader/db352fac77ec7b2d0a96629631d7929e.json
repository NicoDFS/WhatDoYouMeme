{"ast":null,"code":"import _classCallCheck from \"/Users/apaul/Desktop/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/WhatDoYouMeme/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/WhatDoYouMeme/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport Timer from \"react-compound-timer\";\nimport './Meme.css';\n\nvar withTimer = function withTimer(timerProps) {\n  return function (WrappedComponent) {\n    return function (wrappedComponentProps) {\n      return React.createElement(Timer, Object.assign({}, timerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6\n        },\n        __self: this\n      }), function (timerRenderProps) {\n        return React.createElement(WrappedComponent, Object.assign({}, wrappedComponentProps, {\n          timer: timerRenderProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }));\n      });\n    };\n  };\n};\n\nvar CustomTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomTimer, _Component);\n\n  function CustomTimer(props) {\n    var _this;\n\n    _classCallCheck(this, CustomTimer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomTimer).call(this, props));\n    _this.state = {\n      timeInterval: _this.props.timeInterval // in milliseconds\n\n    };\n    return _this;\n  }\n\n  _createClass(CustomTimer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var time = localStorage.getItem('timeBeforeUnmount');\n      var _this$props$timer = this.props.timer,\n          setCheckpoints = _this$props$timer.setCheckpoints,\n          setTime = _this$props$timer.setTime,\n          getTime = _this$props$timer.getTime;\n      setTime(time);\n      setCheckpoints([{\n        time: 0,\n        callback: function callback() {\n          return setTime(_this2.state.timeInterval);\n        }\n      }, {\n        time: time - 1000,\n        callback: function callback() {\n          localStorage.setItem(\"timeBeforeUnmount\", time);\n          time = getTime();\n        }\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h3\", {\n        className: \"TimerCountdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Timer.Hours, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \":\", React.createElement(Timer.Minutes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \":\", React.createElement(Timer.Seconds, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomTimer;\n}(Component);\n\nvar TimerHOC = withTimer({\n  direction: 'backward',\n  initialTime: 0\n})(CustomTimer);\nexport default TimerHOC;","map":{"version":3,"sources":["/Users/apaul/Desktop/WhatDoYouMeme/src/components/Timer.js"],"names":["React","Component","Timer","withTimer","timerProps","WrappedComponent","wrappedComponentProps","timerRenderProps","CustomTimer","props","state","timeInterval","time","localStorage","getItem","timer","setCheckpoints","setTime","getTime","callback","setItem","TimerHOC","direction","initialTime"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAO,YAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,UAAU;AAAA,SAAI,UAAAC,gBAAgB;AAAA,WAAI,UAAAC,qBAAqB;AAAA,aACvE,oBAAC,KAAD,oBAAWF,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACC,UAAAG,gBAAgB;AAAA,eACf,oBAAC,gBAAD,oBAAsBD,qBAAtB;AAA6C,UAAA,KAAK,EAAEC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADe;AAAA,OADjB,CADuE;AAAA,KAAzB;AAAA,GAApB;AAAA,CAA5B;;IAQMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,MAAKF,KAAL,CAAWE,YADd,CAC4B;;AAD5B,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA;;AAClB,UAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX;AADkB,8BAE0B,KAAKL,KAAL,CAAWM,KAFrC;AAAA,UAEVC,cAFU,qBAEVA,cAFU;AAAA,UAEMC,OAFN,qBAEMA,OAFN;AAAA,UAEeC,OAFf,qBAEeA,OAFf;AAIlBD,MAAAA,OAAO,CAACL,IAAD,CAAP;AACAI,MAAAA,cAAc,CAAC,CACb;AACEJ,QAAAA,IAAI,EAAE,CADR;AAEEO,QAAAA,QAAQ,EAAE;AAAA,iBAAMF,OAAO,CAAC,MAAI,CAACP,KAAL,CAAWC,YAAZ,CAAb;AAAA;AAFZ,OADa,EAIV;AACDC,QAAAA,IAAI,EAAEA,IAAI,GAAG,IADZ;AAEDO,QAAAA,QAAQ,EAAE,oBAAM;AACdN,UAAAA,YAAY,CAACO,OAAb,CAAqB,mBAArB,EAA0CR,IAA1C;AACAA,UAAAA,IAAI,GAAGM,OAAO,EAAd;AAED;AANA,OAJU,CAAD,CAAd;AAaD;;;6BAEQ;AACP,aACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,OAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,OAGE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EApCuBjB,S;;AAuCxB,IAAMoB,QAAQ,GAAGlB,SAAS,CAAC;AACzBmB,EAAAA,SAAS,EAAE,UADc;AAEzBC,EAAAA,WAAW,EAAE;AAFY,CAAD,CAAT,CAGdf,WAHc,CAAjB;AAKA,eAAea,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Timer from \"react-compound-timer\";\nimport './Meme.css';\n\nconst withTimer = timerProps => WrappedComponent => wrappedComponentProps => (\n  <Timer {...timerProps}>\n  {timerRenderProps =>\n    <WrappedComponent {...wrappedComponentProps} timer={timerRenderProps} />}\n    </Timer>\n  );\n\n\nclass CustomTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeInterval: this.props.timeInterval, // in milliseconds\n    };\n  }\n\n  componentDidMount() {\n    var time = localStorage.getItem('timeBeforeUnmount');\n    const { setCheckpoints, setTime, getTime} = this.props.timer;\n\n    setTime(time);\n    setCheckpoints([\n      {\n        time: 0,\n        callback: () => setTime(this.state.timeInterval),\n      }, {\n        time: time - 1000,\n        callback: () => {\n          localStorage.setItem(\"timeBeforeUnmount\", time);\n          time = getTime()\n\n        }\n      }\n    ]);\n  }\n\n  render() {\n    return (\n      <h3 className=\"TimerCountdown\">\n        <Timer.Hours />:\n        <Timer.Minutes />:\n        <Timer.Seconds />\n      </h3>\n    );\n  }\n}\n\n  const TimerHOC = withTimer({\n    direction: 'backward',\n    initialTime: 0,\n  })(CustomTimer);\n\n  export default TimerHOC;\n"]},"metadata":{},"sourceType":"module"}
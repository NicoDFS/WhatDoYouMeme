{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apaul/Desktop/WhatDoYouMeme/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apaul/Desktop/WhatDoYouMeme/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Home from \"./Home\";\nimport CreateCaptionCard from \"./CreateCaptionCard\";\nimport Rules from \"./CreateCaptionCard\";\nimport CaptionCardFactory from './web3Contracts/CaptionCardFactory';\nimport CaptionCard from './web3Contracts/CaptionCard';\nimport HeaderAlert from './components/HeaderAlert';\nimport { Link, Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport web3 from './web3';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      isLoggedIn: false,\n      hasMetamask: false,\n      isOnRopsten: false,\n      account: \"\"\n    };\n\n    if (web3 !== \"undefined\") {\n      _this.isMetamaskInstalled();\n\n      _this.listenForAccountChange();\n\n      _this.listenForCaptionCardCreated();\n    }\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"isMetamaskInstalled\",\n    value: function () {\n      var _isMetamaskInstalled = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accounts, networkId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return window.ethereum.enable();\n\n              case 2:\n                accounts = _context.sent;\n                _context.next = 5;\n                return web3.eth.net.getId();\n\n              case 5:\n                networkId = _context.sent;\n                this.setState({\n                  hasMetamask: true,\n                  isLoggedIn: accounts.length > 0,\n                  isOnRopsten: networkId === 3,\n                  account: accounts[0]\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function isMetamaskInstalled() {\n        return _isMetamaskInstalled.apply(this, arguments);\n      }\n\n      return isMetamaskInstalled;\n    }()\n  }, {\n    key: \"listenForAccountChange\",\n    value: function listenForAccountChange() {\n      window.ethereum.on('accountsChanged', function (accounts) {\n        this.setState({\n          account: accounts[0]\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"listenForCaptionCardCreated\",\n    value: function listenForCaptionCardCreated() {\n      CaptionCardFactory.events.CaptionCardCreated().on(\"data\", function (event) {\n        alert(\"New caption card created!\");\n      }).on(\"error\", console.error);\n    }\n  }, {\n    key: \"renderHeaderAlert\",\n    value: function renderHeaderAlert() {\n      console.log(\"here\");\n      var displayMessage = \"\";\n\n      if (!this.state.hasMetamask) {\n        displayMessage = \"Install Metamask to interact with this site.\";\n      } else if (!this.state.isLoggedIn) {\n        displayMessage = \"Login to Metamask to interact with this site.\";\n      } else if (!this.state.isOnRopsten) {\n        displayMessage = \"Switch to the Ropsten test network to interact with this site.\";\n      }\n\n      return React.createElement(HeaderAlert, {\n        displayMessage: displayMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"nav\",\n        variant: \"dark\",\n        sticky: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        as: Link,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"blueText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"#WhatDo\"), React.createElement(\"span\", {\n        className: \"purpleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"You\"), React.createElement(\"span\", {\n        className: \"pinkText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"CryptoMeme? \")), React.createElement(Nav.Link, {\n        className: \"link\",\n        as: Link,\n        to: \"/rules\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Game Rules\")), this.state.hasMetamask && this.state.isLoggedIn && this.state.isOnRopsten ? React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/create-card/\",\n        component: CreateCaptionCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/rules/\",\n        component: Rules,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/*\",\n        render: function render(props) {\n          return React.createElement(Home, Object.assign({}, props, {\n            account: _this2.state.account,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })) : this.renderHeaderAlert());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/apaul/Desktop/WhatDoYouMeme/client/src/App.js"],"names":["React","Component","Navbar","Nav","Home","CreateCaptionCard","Rules","CaptionCardFactory","CaptionCard","HeaderAlert","Link","Switch","BrowserRouter","Router","Route","web3","App","props","state","isLoggedIn","hasMetamask","isOnRopsten","account","isMetamaskInstalled","listenForAccountChange","listenForCaptionCardCreated","window","ethereum","enable","accounts","eth","net","getId","networkId","setState","length","on","bind","events","CaptionCardCreated","event","alert","console","error","log","displayMessage","renderHeaderAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport Home from \"./Home\";\nimport CreateCaptionCard from \"./CreateCaptionCard\";\nimport Rules from \"./CreateCaptionCard\";\nimport CaptionCardFactory from './web3Contracts/CaptionCardFactory';\nimport CaptionCard from './web3Contracts/CaptionCard';\nimport HeaderAlert from './components/HeaderAlert';\nimport {\n  Link, Switch, BrowserRouter as Router, Route\n} from \"react-router-dom\";\nimport './App.css';\nimport web3 from './web3'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      hasMetamask: false,\n      isOnRopsten: false,\n      account: \"\"\n    }\n    if (web3 !== \"undefined\") {\n      this.isMetamaskInstalled()\n      this.listenForAccountChange()\n      this.listenForCaptionCardCreated()\n    }\n  }\n\n  async isMetamaskInstalled() {\n    const accounts = await window.ethereum.enable();\n    var networkId = await web3.eth.net.getId();\n    this.setState({\n      hasMetamask: true,\n      isLoggedIn: accounts.length > 0,\n      isOnRopsten: networkId === 3,\n      account: accounts[0]\n    });\n  }\n\n  listenForAccountChange() {\n    window.ethereum.on('accountsChanged', function (accounts) {\n      this.setState({account: accounts[0]})\n    }.bind(this))\n  }\n\n  listenForCaptionCardCreated() {\n    CaptionCardFactory.events.CaptionCardCreated().on(\"data\", function(event) {\n      alert(\"New caption card created!\");\n    }).on(\"error\", console.error);\n  }\n\n  renderHeaderAlert() {\n    console.log(\"here\")\n    var displayMessage = \"\";\n    if (!this.state.hasMetamask) {\n      displayMessage = \"Install Metamask to interact with this site.\";\n    } else if (!this.state.isLoggedIn) {\n      displayMessage = \"Login to Metamask to interact with this site.\";\n    } else if (!this.state.isOnRopsten) {\n      displayMessage = \"Switch to the Ropsten test network to interact with this site.\";\n    }\n\n    return <HeaderAlert displayMessage={displayMessage}/>;\n  }\n\n  render() {\n    return (\n      <Router>\n          <Navbar className=\"nav\" variant=\"dark\" sticky=\"top\">\n            <Navbar.Brand as={Link} to=\"/\">\n              <span className=\"blueText\">#WhatDo</span>\n              <span className=\"purpleText\">You</span>\n              <span className=\"pinkText\">CryptoMeme? </span>\n            </Navbar.Brand>\n            <Nav.Link className=\"link\" as={Link} to=\"/rules\">Game Rules</Nav.Link>\n          </Navbar>\n          {this.state.hasMetamask && this.state.isLoggedIn && this.state.isOnRopsten\n            ?\n            <Switch>\n              <Route path=\"/create-card/\" component={CreateCaptionCard}/>\n              <Route path=\"/rules/\" component={Rules}/>\n              <Route\n                path=\"/*\"\n                render={(props) => <Home {...props} account={this.state.account}/>}\n              />\n            </Switch>\n            :\n            this.renderHeaderAlert() }\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}